"in the previous video we learned how tocreate a basic CLI tool using node andnpmin this video let's add some logic andalso understand how to pass options torclilet's beginI'm here atpokeyapi.co where you have access to afree Pokemon related rest APIyou can enter a Pokemon name and the APIresponds with a Json of propertiesapplicable to that Pokemonif I typeCharmander and click submitwe get back details about Charmandersuch as abilitiesformsgame indicesEtcwhat I want to focus on though is justthis moves propertymoves is an array of objects and eachobject has a move propertyeach move is in turn an object with aname and URLfor our Pokedex CLI I want to keep itreally simple and display the first fivemoves for a given Pokemonif this requirement is clear let's headback to vs code and add the logicI'm going to begin with the functiondefinition that prints the first fivemoves given a Pokemon nameconst print 5 Movesand this is an async function thataccepts a Pokemon nameand logs the first five moves to theconsolewithin the function we call the PokemonAPI passing in the Pokemon nameso const response is equal to a weightfetchand I'm going to copy paste the API fromthe websitehttps pokeyapi.com API V2 slash Pokemonfollowed by Pokemon namenext convert the response to Jsonconst Pokemon is equal to a weightresponse dot Jsonnext we extract the moves property fromthe JsonPokemon dot movesdot mapand for each movewe extract just the namethen we log to the console only thefirst five moves so moves dot slice0 comma fivefinally we call the functionpassing in a Pokemon namelet's pass in Charmander once againand a small correction move should bedestructurednow what you should know is that thiscode is linked to the command and wedon't have to run any additional stepsto update the CLI with our changeswe can runcode evolutionPokedexand we see the first five moves lockedin the terminal Mega Punch Fire PunchThunder Punch scratch and sword standsour code works as expectedlet's now improve this codeat the moment the Pokemon name is hardcodedlet's make it in such a way that theuser can pass in a Pokemon name whenrunning the CLI command itselfnow the way to pass arguments to a CLItool is to pass acli optionin index.js we can add a log statementwhere we logprocess.arg Vif we now runcode Evolution Pokedex dash dash Pokemonis equal to Charmanderwe see an additional log fromprocess.argarythis is an array where the zeroth indexis always path to The Interpreterand first index is path to the CLIfrom the second index though we have thepassed in optionswe have passed in one option which isPokemon is equal to Charmandernow we can process this array but abetter way is to use a package calledyards let me install itnpm install yardsyou can see it listed as a dependency inpackage.jsonYorks converts options into key valuepairs that we can easily access in ourcodein index.js let's import and use thepackageconst ergs is equal to require yarksand we extract our GUIcalling yards passing in process dotarguenow instead of passing in Charmanderwe can pass inargue dot Pokemonand this is what yarx doesit allows us to easily retrieve thePokemon option valueif we now runcode Evolution Pokedex with an optionPokemon is equal to Charmanderwe see the same output as beforerun the CLI with Pokemon is equal to Muand we see a different set of moves ourCLI works as expected and has a fewimprovementsin the next video let's add someinteractivity to the CLIthank you for watching and I'll see youin the next one"
/watch?v=oIg08Z0bqsY&list=PLC3y8-rFHvwh8shCMHFA5kWxD9PaPwxaY&index=59:1 The resource https://i.ytimg.com/generate_204 was preloaded using link preload but not used within a few seconds from the window's load event. Please make sure it has an appropriate `as` value and it is preloaded intentionally.